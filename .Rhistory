a <- available.packages()
a
install.packages("slidify")
search()
install.packages("GMD")
ibrary(GDM)
library(GDM)
library(gmd)
libary(GMD)
library(GMD)
search()
install.packages("devtools")
library(devtools)
search()
find_rtools()
install.package("KernsSmooth")
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
library(KernsSmooth)
library(KernSmooth)
library(kernsmooth)
search()
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
getwd()
cd ("../Desktop")
cd("C:/USers/ghutty/Desktop")
chdir
?chdir
??chdir
??dir
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
myseq <- seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Patrick")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!", sep="")
paste("Hello","world!",sep=" ")
paste(c(1:3,c("x","y","z")),sep="")
paste(1:3,c("x","y","z",sep=""))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(is.na(myNA),!is.na(myNA))
sum(myNA)
myData
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)] & x > 0
x[!is.na(x) & x > 0]
x[3,5,7]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(data=1:20,nrow=4,ncol=5,byrow=false,dimnames=NULL)
myMatrix2 <- matrix(data=1:20,nrow=4,ncol=5,byrow=FALSE,dimnames=NULL)
identical(myMatrix,myMatrix2)
patients <- c("Bill","gina","Kelly","Sean")
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(myData) <- cnames
myData
x <- 4L
class(x)
x
x <- c(4,"a",TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
m1 <- rbind(x,y)
class(m1)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] == 4
x[x == 4] > 10
x
x[x > 10] <- 4
x[x < 10] <- 4
x
x[x < 10] <- 4
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10] <- 4
x
hw1_data <- read.csv("C:/Users/ghutty/Desktop/Coursera/Data Science/Week1/rprog-data-quiz1_data/hw1_data.csv")
View(hw1_data)
colnames(hw_data)
colnames(hw1_data)
head(hw1_data,2)
row(hw1_data)
hw1_data
hw1_data <- read.csv("C:/Users/ghutty/Desktop/Coursera/Data Science/Week1/rprog-data-quiz1_data/hw1_data.csv")
View(hw1_data)
hw1_data
tail(hw1_data,2)
hw1_data[47,]
bad <- is.na(hw1_data)
bad
hw1_data[!bad]
hw1_data
bad <- is.na?Ozone
bad <- is.na(hw1_data[1,])
bad
bad <- is.na(hw1_data[,1])
bad
hw1_data[,1,]
hw1_data
head(hw1_data)
hw1_data["Ozone"]
bad <- is.na(hw1_data["Ozone"])
bad
is.na(hw1_data[["Ozone"]])
hw1_data
bad <- is.na(hw1_data["Ozone"])
bad
hw1_data[!bad]
hw1_data[!bad,]
hw1_data[bad]
hw1_data[bad,]
bad
complete.cases(hw1_data["Ozone"])
complete.cases(hw1_data[1,])
hw1_data["Ozone"]
bad <- complete.cases(hw1_data)
bad
hw1_data[bad,]
hw1_data[!bad]
hw1_data[!bad,]
nrow(hw1_data[!bad,])
bad <- complete.cases(hw1_data["Ozone"])
hw1_data[!bad,]
nrows(hw1_data[!bad,])
nrow(hw1_data[!bad,])
mean(hw1_data[bad,])
hw1_data[bad, ]
mean(hw1_data["Ozone"],na.rm=TRUE)
samp1 <- hw1_data["Ozone"]
samp1
mean(samp1,na.rm=TRUE)
class(samp1)
samp1 <- hw1_data[["Ozone"]]
samp1
class(samp1)
mean(samp1,na.rm=TRUE)
hw1_data[]
oz <- hw1_data["Ozone"]
temp <- hw1_data["Temp"]
oz
oz > 31
temp > 90
hw1_data[oz & temp]
hw1_data[oz]
oz
hw1_data
samp2 <- subset(hw1_data, Ozone > 31,Temp > 90)
samp2
samp2 <- subset(hw1_data, Ozone > 31 & Temp > 90)
samp2
mean(samp2["Solar.R"])
samp2["Solar.R"]
samp2[["Solar.R"]]
mean(samp2[["Solar.R"]])
samp3 <- subset(hw1_data,Month==6)
samp3
samp5 <- hw1_data[["Temp"]]
samp5
mean(samp5)
samp5
samp4
samp3
samp3
mean(samp3[["Temp"]])
samp6 <- subset(hw1_data,Month==5)
samp6
max(samp6[["Ozone"]])
samp6
samp6[["Ozone"]]
max(samp6[["Ozone"]],na.rm=TRUE)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(rJava)
library(xlsx)
library(rJava)
install.packages("XLConnect")
library(XLConnect)
library(XML)
install.packages("XML")
library(XML)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '")
getwd()
ls()
if(!file.exists("data")){ dir.create("data")}
ls()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile="./data/getdata_data_ss06hid.csv",method="curl")
download.file(fileUrl,destfile="./data/getdata_data_ss06hid.csv")
list.files("./data")
sshidData <- read.table("./data/getdata_data_ss06hid.csv",sep=",")
sshidData
getOption("max.print")
install.packages(c("boot", "class", "cluster", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"))
ss06 <- read.csv("./data/getdata_data_ss06hid.csv")
head(ss06)
ss06[["VAL"]]
ss06[["VAL"]]==24
subset(ss06,ss06[["VAL"]]==24)
ss06[["VAL"]]
sso6Mil <- subset(ss06,sso6[["VAL"]]==24)
ss06Mil <- subset(ss06,ss06[["VAL"]]==24)
ss06Mil
ss06Mil[["VAL"]]
nrows(ss06Mil)
nrow(ss06Mil)
ss06[["FES"]]
library("xlsx")
install.packages("rJava")
library(rJava)
library(rjava)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
library(rJava)
library(xlsx)
library(XLConnect)
library(rJava)
ngapFile <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
ngapFile <- download.file"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="./data/ngap.xlsx")
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx
ngapFile <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="./data/ngap.xlsx")
ngap <- read.xlsx("./data/ngap.xlsx")
ngap <- read.xlsx("./data/ngap.xlsx",1)
ngap <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,header=TRUE)
ngap <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
ngap <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23,header=TRUE)
library(xlsx)
dat <- ngap <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
dat <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
install.packages("rJava")
install.packages("rJava")
library(rJava)
C:\Program Files\Java\jre7
library(rJava)
Sys.setenv(JAVA_HOME="C:\Program Files\Java\jre7")
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre7")
library(rJava)
dat <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
library(xlsx)
dat <- read.xlsx("./data/ngap.xlsx",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
ngapFile <- download.file"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="./data/dat.xls")
ngapF <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="./data/dat.xls")
dat <- read.xlsx("./data/dat.xls",sheetIndex=1,colIndex=7:15,rowIndex=18:23)
colIndex=7:15
rowIndex=18:13
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx colIndex,rowIndex=rowIndex)
dat <- read.xlsx("./data/dat.xls",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
rowIndex
colIndex
colIndex=18:23
at <- read.xlsx("./data/dat.xls",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
options(java.parameters = "-Xmx1000m")
dat <- read.xlsx("./data/dat.xls",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
install.packages('RMySQL',type='source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
library(rmysql)
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
library(RMySQL)
library(Rmysql)
library(rmysql)
ppois(10,lambda=5*3)
?pnorm
pnorm(70,80,10)
x=sapply(rep(100,100), function (x) mean(rnorm(x,1100,75)))
y=sapply(rep(1,100), function (x) mean(rnorm(x,1100,75)))
hist(x, main ="Distribution of Mean of 100 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(x)))
hist(y, main ="Distribution of 1 Normally Distributed r.v 100 samples", xlab =paste("SD is",sd(y)))
rnor,(95,80,10)
rnorm(95,80,10)
qnorm(95,80,10)
qnorm(95,1100,75)
?qnorm
pnorm(95,1100,75)
qnorm(.95,1100,75)
mean(rnorm(100, 1100, 75))
rnorm(100,1100,75)
pnorm(100,15,10)
rnorm(100,15,10)
?ppois
ppois(3,lambda=5*.25)
sd(runif(100))
sd(runif(1000))
sd(runif(10000))
sd(runif(100000))
?sd
?squareroot
?pnorm
pnorm(100000,.5,.000912)
dnorm(100000,.5,.000912)
?dunif
?dnorm
dnorm(100000,.5,.00921)
dnorm(10000,.5,.0921)
?sd
sd(1/12)
1/12
x <- 1/12
sd(x)
sqrt(1/12)
?unif
?dunif
?dnorm
sqrt(2.92)
sqrt(1000)
sqrt(1/12)
sqrt(1/12) / sqrt(1000)
?mean
?binorm
?bnorm
binom
?binom
0/0.009128709
.5/0.009128709
x <- c(1:6)
combn(x,3)
sqrt(1/12) / sqrt(100)
sqrt(1/12)
x <- c(1:8)
combn(x,3)
sqrt(1/12) / sqrt(1000)
ppois(10,lambda=5*3)
q(norm)
.01 * 500
.5/500
ppois(4,lambda=5*.5)
ppois(5,lambda=5*.5)
ppois(4,lambda=4*.5)
ppois(3,lambda=5*.5)
ppois(2,lambda=5*.5)
ppois(1,lambda=5*.5)
ppois(4,lambda=5)
ppois(5,lambda=5)
ppois(5,lambda=*.5)
.5 / (sqrt(1/12)/sqrt(1000))
x <- c(1:6)
combn(x,3)
choose(9,3)
y <- c(1:9)
combn(y,3)
choose(6,3)
choose(8,3)
?rnorm
rnorm(100,1100,75)
qnorm(.75,1100,75)
choose(9,3)
rnorm(1, 1100, 75)
qnorm(.95,1100,75)
rnorm(.95, 1100, 75)
mean(rnorm(100, 1100, 75))
sqrt(100)/10
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("downloader")
library(downloader)
download("https://github.com/ramnathv/rCharts/archive/master.tar.gz", "rCharts.tar.gz")
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
install.packages('roxygen2')
getwd()
setwd("data/testDeck")
getwd()
install.packages("shiny")
runExample("01_hello")
library("shiny")
runExample("01_hello")
runExample("01_hello")
setwd("../")
getwd()
runApp("testDeck")
runApp("testDeck")
runApp("testDeck")
runApp("testDeck")
runApp("testDeck")
runApp("testDeck")
install.packages("maps")
install.packages("mapproj")
runApp("testDeck")
install.packages("shinyapps")
install_github("shinyapps")
install_github('shinyapps')
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
install.packages(c('ggplot2', 'shiny'))
install.packages(c("ggplot2", "shiny"))
shinyapps::setAccountInfo(name='ghutty', token='A82A2D7AEB466AE9DBA470711961CBAD', secret='t7EBglF5KChGHQBuBBcQLHAN2PO4zcOEvDVNAPjv')
deployApp("testDeck")
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/rscrypt')
getwd()
setwd("testDeck")
deployApp()
restart
restart()
exit()
